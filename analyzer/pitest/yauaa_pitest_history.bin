82
<classHistory><id hierarchicalHash="ccfe9b44"><classId hash="3439237956"><name><name>nl/basjes/parse/useragent/utils/Splitter</name></name></classId></id><coverageId>4a0d4c07f</coverageId></classHistory>
<classHistory><id hierarchicalHash="121ac612e"><classId hash="3106571111"><name><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="124eb9f6e"><classId hash="1172151809"><name><name>nl/basjes/parse/useragent/analyze/Matcher$ConfigLine</name></name></classId></id><coverageId>5c8e432fe</coverageId></classHistory>
<classHistory><id hierarchicalHash="179f616d9"><classId hash="3456025117"><name><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></name></classId></id><coverageId>60511abc1</coverageId></classHistory>
<classHistory><id hierarchicalHash="dc4b8a5c"><classId hash="2384238589"><name><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></name></classId></id><coverageId>531ccfe81</coverageId></classHistory>
<classHistory><id hierarchicalHash="65c9f601"><classId hash="1707734529"><name><name>nl/basjes/parse/useragent/utils/Normalize</name></name></classId></id><coverageId>46f395f35</coverageId></classHistory>
<classHistory><id hierarchicalHash="c8c81d5d"><classId hash="3368557917"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="b4a33ddf"><classId hash="3030597087"><name><name>nl/basjes/parse/useragent/TestErrorHandling</name></name></classId></id><coverageId>b4a33ddf</coverageId></classHistory>
<classHistory><id hierarchicalHash="d965f2cc"><classId hash="208099208"><name><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></name></classId></id><coverageId>4dd023942</coverageId></classHistory>
<classHistory><id hierarchicalHash="e2c6bc97"><classId hash="436117306"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></name></classId></id><coverageId>53c35cf09</coverageId></classHistory>
<classHistory><id hierarchicalHash="c09940e9"><classId hash="3003863583"><name><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType</name></name></classId></id><coverageId>fdc9c89f</coverageId></classHistory>
<classHistory><id hierarchicalHash="e3249146"><classId hash="3810824518"><name><name>nl/basjes/parse/useragent/utils/YamlUtils</name></name></classId></id><coverageId>5c8e432fe</coverageId></classHistory>
<classHistory><id hierarchicalHash="11b421d17"><classId hash="1383727034"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepNormalizeBrand</name></name></classId></id><coverageId>3d7b97248</coverageId></classHistory>
<classHistory><id hierarchicalHash="b49b28db"><classId hash="3030067419"><name><name>nl/basjes/parse/useragent/TestPredefinedBrowsersPerField</name></name></classId></id><coverageId>b49b28db</coverageId></classHistory>
<classHistory><id hierarchicalHash="aef237ac"><classId hash="1623409997"><name><name>nl/basjes/parse/useragent/analyze/MatcherAction$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="190d6f490"><classId hash="3356415795"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepIsNull</name></name></classId></id><coverageId>43e6c066a</coverageId></classHistory>
<classHistory><id hierarchicalHash="14a90ba6d"><classId hash="2177408272"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/lookup/StepLookup</name></name></classId></id><coverageId>43e6c066a</coverageId></classHistory>
<classHistory><id hierarchicalHash="daeeaea1"><classId hash="3673075361"><name><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></name></classId></id><coverageId>511b0b3aa</coverageId></classHistory>
<classHistory><id hierarchicalHash="15591472a"><classId hash="2291313638"><name><name>nl/basjes/parse/useragent/utils/WordSplitter</name></name></classId></id><coverageId>4dd023942</coverageId></classHistory>
<classHistory><id hierarchicalHash="182b4acf4"><classId hash="3119288215"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="1abbf56c3"><classId hash="4208734683"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></name></classId></id><coverageId>420dffd08</coverageId></classHistory>
<classHistory><id hierarchicalHash="9ba432c2"><classId hash="2611229378"><name><name>nl/basjes/parse/useragent/TestPredefinedBrowsers</name></name></classId></id><coverageId>9ba432c2</coverageId></classHistory>
<classHistory><id hierarchicalHash="3b3c1d29"><classId hash="993795369"><name><name>nl/basjes/parse/useragent/TestSerialization</name></name></classId></id><coverageId>3b3c1d29</coverageId></classHistory>
<classHistory><id hierarchicalHash="b0e324e8"><classId hash="2967676136"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="492e0860"><classId hash="1227753568"><name><name>nl/basjes/parse/useragent/classify/DeviceClass</name></name></classId></id><coverageId>8e575ec6</coverageId></classHistory>
<classHistory><id hierarchicalHash="1289efaea"><classId hash="3664775307"><name><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></name></classId></id><coverageId>5c8e432fe</coverageId></classHistory>
<classHistory><id hierarchicalHash="14afe60a9"><classId hash="2184594252"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></name></classId></id><coverageId>53c35cf09</coverageId></classHistory>
<classHistory><id hierarchicalHash="50f9367f"><classId hash="1099004469"><name><name>nl/basjes/parse/useragent/classify/UserAgentClassifier$1</name></name></classId></id><coverageId>8e575ec6</coverageId></classHistory>
<classHistory><id hierarchicalHash="43fe8a72"><classId hash="227405514"><name><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></name></classId></id><coverageId>60511abc1</coverageId></classHistory>
<classHistory><id hierarchicalHash="59136d16"><classId hash="1494445334"><name><name>nl/basjes/parse/useragent/analyze/MatchesList</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="1a27b3d63"><classId hash="679814794"><name><name>nl/basjes/parse/useragent/UserAgentAnalyzer$GetAllPathsAnalyzer</name></name></classId></id><coverageId>ecda209a</coverageId></classHistory>
<classHistory><id hierarchicalHash="eb7a497e"><classId hash="3950659966"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="d670805b"><classId hash="3597697115"><name><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></name></classId></id><coverageId>38313573</coverageId></classHistory>
<classHistory><id hierarchicalHash="10f30d13e"><classId hash="3055379496"><name><name>nl/basjes/parse/useragent/analyze/MatchesList$1</name></name></classId></id><coverageId>5c8e432fe</coverageId></classHistory>
<classHistory><id hierarchicalHash="192c80a11"><classId hash="3388992692"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepUp</name></name></classId></id><coverageId>53c35cf09</coverageId></classHistory>
<classHistory><id hierarchicalHash="8ddece09"><classId hash="1938547361"><name><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor</name></name></classId></id><coverageId>53c35cf09</coverageId></classHistory>
<classHistory><id hierarchicalHash="fdc9c89f"><classId hash="4257859743"><name><name>nl/basjes/parse/useragent/DocumentationExample</name></name></classId></id><coverageId>fdc9c89f</coverageId></classHistory>
<classHistory><id hierarchicalHash="2e9e76fc"><classId hash="782137084"><name><name>nl/basjes/parse/useragent/annotate/TestAnnotationSystemAnonymous</name></name></classId></id><coverageId>2e9e76fc</coverageId></classHistory>
<classHistory><id hierarchicalHash="15e86d70a"><classId hash="3942315113"><name><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></name></classId></id><coverageId>53c35cf09</coverageId></classHistory>
<classHistory><id hierarchicalHash="8ff4ab18"><classId hash="2415176472"><name><name>nl/basjes/parse/useragent/analyze/InvalidParserConfigurationException</name></name></classId></id><coverageId>37ec74d97</coverageId></classHistory>
<classHistory><id hierarchicalHash="9ab31bab"><classId hash="1283729740"><name><name>nl/basjes/parse/useragent/analyze/MatcherAction$InitErrorListener</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="967e51f3"><classId hash="1030415581"><name><name>nl/basjes/parse/useragent/analyze/MatchesList$Match</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="56dd5e5e"><classId hash="1015706358"><name><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="a888c28a"><classId hash="2600129472"><name><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></name></classId></id><coverageId>45d0d75cb</coverageId></classHistory>
<classHistory><id hierarchicalHash="c8293371"><classId hash="3358143345"><name><name>nl/basjes/parse/useragent/utils/AntlrUtils</name></name></classId></id><coverageId>45d0d75cb</coverageId></classHistory>
<classHistory><id hierarchicalHash="abf754bc"><classId hash="2885113020"><name><name>nl/basjes/parse/useragent/analyze/Analyzer</name></name></classId></id><coverageId>60511abc1</coverageId></classHistory>
<classHistory><id hierarchicalHash="1247b3243"><classId hash="1538462950"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepCleanVersion</name></name></classId></id><coverageId>43e6c066a</coverageId></classHistory>
<classHistory><id hierarchicalHash="13555de96"><classId hash="1821229369"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepBackToFull</name></name></classId></id><coverageId>53c35cf09</coverageId></classHistory>
<classHistory><id hierarchicalHash="1590b45c5"><classId hash="2420320360"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepContains</name></name></classId></id><coverageId>43e6c066a</coverageId></classHistory>
<classHistory><id hierarchicalHash="979e6ec9"><classId hash="2543742665"><name><name>nl/basjes/parse/useragent/analyze/UselessMatcherException</name></name></classId></id><coverageId>2ca240fb8</coverageId></classHistory>
<classHistory><id hierarchicalHash="cfb12260"><classId hash="3484492384"><name><name>nl/basjes/parse/useragent/utils/TestNormalize</name></name></classId></id><coverageId>cfb12260</coverageId></classHistory>
<classHistory><id hierarchicalHash="19d6a4302"><classId hash="3567396261"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEndsWith</name></name></classId></id><coverageId>3d7b97248</coverageId></classHistory>
<classHistory><id hierarchicalHash="3e2e379c"><classId hash="1043216284"><name><name>nl/basjes/parse/useragent/analyze/TestNumberRangeVisitor</name></name></classId></id><coverageId>3e2e379c</coverageId></classHistory>
<classHistory><id hierarchicalHash="14674967f"><classId hash="1526353153"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$1</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="b0aca7d7"><classId hash="2964105175"><name><name>nl/basjes/parse/useragent/TestDeveloperTools</name></name></classId></id><coverageId>b0aca7d7</coverageId></classHistory>
<classHistory><id hierarchicalHash="156915ce1"><classId hash="1355032571"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="12c090e3f"><classId hash="1665200354"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepFixedString</name></name></classId></id><coverageId>4cb1a6a5f</coverageId></classHistory>
<classHistory><id hierarchicalHash="9106d6d1"><classId hash="2433144529"><name><name>nl/basjes/parse/useragent/analyze/TestBuilder</name></name></classId></id><coverageId>9106d6d1</coverageId></classHistory>
<classHistory><id hierarchicalHash="120358d37"><classId hash="3921998223"><name><name>nl/basjes/parse/useragent/UserAgent</name></name></classId></id><coverageId>6fa1b9ea9</coverageId></classHistory>
<classHistory><id hierarchicalHash="5d607d"><classId hash="6119549"><name><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="df0e016d"><classId hash="3742237037"><name><name>nl/basjes/parse/useragent/analyze/Matcher</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="16a5c85b9"><classId hash="3674885873"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="9f9d753b"><classId hash="1739338638"><name><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="1b713a003"><classId hash="3910458854"><name><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></name></classId></id><coverageId>37ec74d97</coverageId></classHistory>
<classHistory><id hierarchicalHash="1d9e5645"><classId hash="496916037"><name><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="4e2ef25f"><classId hash="1311699551"><name><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="992be77"><classId hash="160611959"><name><name>nl/basjes/parse/useragent/annotate/TestAnnotationSystem</name></name></classId></id><coverageId>992be77</coverageId></classHistory>
<classHistory><id hierarchicalHash="f360f817"><classId hash="4083218455"><name><name>nl/basjes/parse/useragent/analyze/TestBasics</name></name></classId></id><coverageId>f360f817</coverageId></classHistory>
<classHistory><id hierarchicalHash="66b29422"><classId hash="1722979362"><name><name>nl/basjes/parse/useragent/analyze/TestTreewalkerParsing</name></name></classId></id><coverageId>66b29422</coverageId></classHistory>
<classHistory><id hierarchicalHash="16d203f31"><classId hash="2757239252"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEquals</name></name></classId></id><coverageId>62f96c720</coverageId></classHistory>
<classHistory><id hierarchicalHash="1ab9d667a"><classId hash="3805628701"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></name></classId></id><coverageId>3d7b97248</coverageId></classHistory>
<classHistory><id hierarchicalHash="5cfea848"><classId hash="1560193096"><name><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></name></classId></id><coverageId>66dc4febc</coverageId></classHistory>
<classHistory><id hierarchicalHash="8e575ec6"><classId hash="2388090566"><name><name>nl/basjes/parse/useragent/classify/TestClassifier</name></name></classId></id><coverageId>8e575ec6</coverageId></classHistory>
<classHistory><id hierarchicalHash="f77bc4a"><classId hash="259505226"><name><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></name></classId></id><coverageId>8e575ec6</coverageId></classHistory>
<classHistory><id hierarchicalHash="b2777e8e"><classId hash="2994175630"><name><name>nl/basjes/parse/useragent/annonate/YauaaField</name></name></classId></id><coverageId>0</coverageId></classHistory>
<classHistory><id hierarchicalHash="1db60788"><classId hash="498468744"><name><name>nl/basjes/parse/useragent/analyze/TestMatcherExpressions</name></name></classId></id><coverageId>1db60788</coverageId></classHistory>
<classHistory><id hierarchicalHash="3c2d78c3"><classId hash="1009612995"><name><name>nl/basjes/parse/useragent/parse/TestUserAgentFlattening</name></name></classId></id><coverageId>3c2d78c3</coverageId></classHistory>
<classHistory><id hierarchicalHash="dba047df"><classId hash="316156546"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepStartsWith</name></name></classId></id><coverageId>43e6c066a</coverageId></classHistory>
<classHistory><id hierarchicalHash="715deda6"><classId hash="1674575580"><name><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$1</name></name></classId></id><coverageId>fdc9c89f</coverageId></classHistory>
<classHistory><id hierarchicalHash="7ff4c377"><classId hash="2146747255"><name><name>nl/basjes/parse/useragent/analyze/TestWordSplitter</name></name></classId></id><coverageId>7ff4c377</coverageId></classHistory>
<classHistory><id hierarchicalHash="134b9c579"><classId hash="1257559018"><name><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></name></classId></id><coverageId>6fa1b9ea9</coverageId></classHistory>
<classHistory><id hierarchicalHash="dd954402"><classId hash="348989093"><name><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepNotEquals</name></name></classId></id><coverageId>3d7b97248</coverageId></classHistory>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Analyzer</name></clazz><method><name>getRequiredInformRanges</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Set;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>get</name></method><methodDesc>(I)Ljava/lang/Integer;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor.rangeMultipleValues(nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>get</name></method><methodDesc>(I)Ljava/lang/Integer;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor.rangeSingleValue(nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>getEnd</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>getStart</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>size</name></method><methodDesc>()I</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor.rangeSingleValue(nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>size</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor.rangeSingleValue(nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeList</name></clazz><method><name>size</name></method><methodDesc>()I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor.rangeSingleValue(nl.basjes.parse.useragent.analyze.TestNumberRangeVisitor)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>calculateFixedValue</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>evaluate</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>evaluate</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>evaluate</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>getFixedValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>getWalkListForUnitTesting</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/treewalker/steps/WalkList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/String;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator$1</name></clazz><method><name>visitPathFixedValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>getActualValue</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>getActualValue</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>getActualValue</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>getNextStep</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/treewalker/steps/Step;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleNameEquals(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>setNextStep</name></method><methodDesc>(ILnl/basjes/parse/useragent/analyze/treewalker/steps/Step;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>treeIsSeparator</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>treeIsSeparator</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>treeIsSeparator</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>walkNextStep</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepContains</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepContains</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepContains</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEndsWith</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEndsWith</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEndsWith</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEquals</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEquals</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepEquals</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepIsNull</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepIsNull</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepIsNull</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepNotEquals</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepNotEquals</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepNotEquals</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepStartsWith</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepStartsWith</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/compare/StepStartsWith</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/lookup/StepLookup</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/lookup/StepLookup</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/lookup/StepLookup</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/lookup/StepLookup</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/lookup/StepLookup</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepBackToFull</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepCleanVersion</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepNormalizeBrand</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.DocumentationExample.runDocumentationExample(nl.basjes.parse.useragent.DocumentationExample)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/NumberRangeList;Ljava/lang/String;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>readObject</name></method><methodDesc>(Ljava/io/ObjectInputStream;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>readObject</name></method><methodDesc>(Ljava/io/ObjectInputStream;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepDown</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepUp</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepUp</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepUp</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable</name></clazz><method><name>iterator</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>hasNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>hasNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>next</name></method><methodDesc>()Lorg/antlr/v4/runtime/ParserRuleContext;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>next</name></method><methodDesc>()Lorg/antlr/v4/runtime/ParserRuleContext;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>defaultResult</name></method><methodDesc>()Ljava/util/Iterator;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>getChildrenByName</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$0</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$0</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$0</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$0</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$1</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$1</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$1</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$1</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$10</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$11</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$12</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$13</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$2</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$2</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$2</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$4</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$4</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$4</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$5</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$5</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$5</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$6</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$6</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$6</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$6</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$6</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$6</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$7</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$8</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$8</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$8</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$8</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$8</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$9</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitCommentBlock</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentBlockContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitCommentEntry</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitCommentProduct</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitKeyWithoutValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyWithoutValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProduct</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductName</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>114</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameNoVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductVersionWithCommas</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitRootElements</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$RootElementsContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/DeviceClass</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>177</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>182</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>192</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>197</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>202</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>207</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>212</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>217</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>222</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>227</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>232</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>237</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>242</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>247</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>252</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>getDeviceClass</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/classify/DeviceClass;</methodDesc></location><indexes><int>257</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isDeliberateMisuse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isDeliberateMisuse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isHuman</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isHuman</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isMobile</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isMobile</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isNormalConsumerDevice</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/classify/UserAgentClassifier</name></clazz><method><name>isNormalConsumerDevice</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testClassifier(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningSpecialCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 3 -&gt; Only field: &quot;DeviceCpu&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>127</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningExtremeTestCase(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.methodInputValidation(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>145</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>replaceString</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>replaceString</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>replaceString</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>replaceString</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>234</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>63</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>126</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>149</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>190</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>198</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandOne(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>241</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>cleanupDeviceBrandName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkCombiningDeviceNameAndBrand(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>cleanupDeviceBrandName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>cleanupDeviceBrandName</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkCombiningDeviceNameAndBrand(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>email</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkEmailNormalization(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>isTokenSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationExamples(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>isTokenSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.utils.TestNormalize.checkBrandNormalizationWord(nl.basjes.parse.useragent.utils.TestNormalize)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>createSplitList</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>createSplitList</name></method><methodDesc>([C)Ljava/util/List;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>createSplitList</name></method><methodDesc>([C)Ljava/util/List;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>createSplitList</name></method><methodDesc>([C)Ljava/util/List;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 3 -&gt; Only field: &quot;DeviceCpu&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>createSplitList</name></method><methodDesc>([C)Ljava/util/List;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findEndOfString</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findEndOfString</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findEndOfString</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitterRange(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findEndOfString</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findEndOfString</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitterRange(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findEndOfString</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findNextSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitEnd</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitEnd</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitEnd</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitEnd</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitEnd</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitEnd</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterRanges(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;II)Ljava/lang/String;</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.testSplitList(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Ljava/util/List;Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getInstance</name></method><methodDesc>()Lnl/basjes/parse/useragent/utils/VersionSplitter;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>isEndOfStringSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>isSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>isSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterDOT(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>looksLikeEmailOrWebaddress</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW1(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>looksLikeEmailOrWebaddress</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>looksLikeEmailOrWebaddress</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterEMail(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>looksLikeEmailOrWebaddress</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterEMail(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>looksLikeEmailOrWebaddress</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterWWW2(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>createErrorString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getExactlyOneNodeTuple</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/NodeTuple;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getExactlyOneNodeTuple</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/NodeTuple;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getKeyAsString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getKeyAsString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getStringValues</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getStringValues</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getStringValues</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getStringValues</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsMappingNode</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/MappingNode;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsMappingNode</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/MappingNode;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsSequenceNode</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/SequenceNode;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsSequenceNode</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/SequenceNode;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsSequenceNode</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/SequenceNode;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="23" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>91</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>addMajorVersionField</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>addMajorVersionField</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>addMajorVersionField</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>addMajorVersionField</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>cachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>cachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>cachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>cachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>cachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="80" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="80" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>121</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>136</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>85</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 16 -&gt; Only field: &quot;LayoutEngineNameVersion&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 16 -&gt; Only field: &quot;LayoutEngineNameVersion&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>concatFieldValuesNONDuplicated</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>165</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>disableCaching</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>eraseTestCases</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPaths</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPathsAnalyzer</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$GetAllPathsAnalyzer;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPossibleFieldNames</name></method><methodDesc>()Ljava/util/Set;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPossibleFieldNames</name></method><methodDesc>()Ljava/util/Set;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPossibleFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPossibleFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getAllPossibleFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getCacheSize</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getCacheSize</name></method><methodDesc>()I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getCacheSize</name></method><methodDesc>()I</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getRequiredInformRanges</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Set;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>getVersion</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>264</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="80" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>296</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="RUN_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>326</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="80" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>349</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>356</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="10" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.methodInputValidation(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>264</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>291</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>296</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>326</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="19" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>349</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>356</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>362</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>393</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>76</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>83</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>90</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>97</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>111</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>125</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>132</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>146</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>160</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>174</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>181</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>189</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="55" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 15 -&gt; Only field: &quot;LayoutEngineVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>203</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="43" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 53 -&gt; Only field: &quot;WebviewAppNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>211</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="14" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>219</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>227</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="43" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 53 -&gt; Only field: &quot;WebviewAppNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>235</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>243</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>251</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>280</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>312</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 28 -&gt; Only field: &quot;AgentInformationEmail&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>hardCodedPostProcessing</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>388</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>84</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>()V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>lambda$getRequiredInformRanges$3</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Set;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>lambda$informMeAbout$2</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Set;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>lambda$loadYamlMatcher$0</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>lambda$lookingForRange$1</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/Set;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkEmptyFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>78</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkFileIsNotAMap(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkBadStructure(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>137</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>203</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>213</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResource</name></method><methodDesc>(Lorg/yaml/snakeyaml/Yaml;Ljava/io/InputStream;Ljava/lang/String;)V</methodDesc></location><indexes><int>223</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkEmptyFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>376</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="88" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>386</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="66" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>445</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="15" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>458</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="15" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>460</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="15" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>469</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="15" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>533</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="RUN_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>535</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkEmptyFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>180</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>201</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>228</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>283</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>298</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>325</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>353</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>410</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>147</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkEmptyFile(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadResources</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>158</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlLookup</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlLookup</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlLookup</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlLookup</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>133</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlLookup</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>135</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlLookup</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>112</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>217</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="25" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateErrorSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>221</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>238</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>276</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>287</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>290</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>319</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="24" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateErrorSituationOutput(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>331</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>349</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>282</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoTestInput(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>loadYamlTestcase</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>301</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="RUN_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="64" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>134</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>175</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="RUN_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>141</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>163</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>131</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>logVersion</name></method><methodDesc>([Ljava/lang/String;)V</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>newBuilder</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="80" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>nonCachedParse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>padding</name></method><methodDesc>(CI)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>padding</name></method><methodDesc>(CI)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>padding</name></method><methodDesc>(CI)Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>padding</name></method><methodDesc>(CI)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="RUN_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>parse</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>parse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>parse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.methodInputValidation(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>parse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>parse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>104</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>preHeat</name></method><methodDesc>(IZ)V</methodDesc></location><indexes><int>119</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>readObject</name></method><methodDesc>(Ljava/io/ObjectInputStream;)V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>readObject</name></method><methodDesc>(Ljava/io/ObjectInputStream;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>readObject</name></method><methodDesc>(Ljava/io/ObjectInputStream;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>readObject</name></method><methodDesc>(Ljava/io/ObjectInputStream;)V</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>setCacheSize</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="RUN_ERROR"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>setCacheSize</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>setShowMatcherStats</name></method><methodDesc>(Z)Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="24" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>setVerbose</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>verifyWeAreNotAskingForImpossibleFields</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>verifyWeAreNotAskingForImpossibleFields</name></method><methodDesc>()V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>verifyWeAreNotAskingForImpossibleFields</name></method><methodDesc>()V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>verifyWeAreNotAskingForImpossibleFields</name></method><methodDesc>()V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer</name></clazz><method><name>verifyWeAreNotAskingForImpossibleFields</name></method><methodDesc>()V</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>()V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="16" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>clone</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="74" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>clone</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>clone</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>clone</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="74" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgent$AgentField;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgent$AgentField;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>get</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgent$AgentField;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAmbiguityCount</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="70" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNames</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getAvailableFieldNamesSorted</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="76" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getConfidence</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/Long;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="6" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getConfidence</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/Long;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getConfidence</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/Long;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getConfidence</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/Long;</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getConfidence</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/Long;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getUserAgentString</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getValue</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getValue</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getValue</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getValue</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>getValue</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>hasAmbiguity</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="82" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>hasSyntaxError</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>isDebug</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="80" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>isSystemField</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>isSystemField</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>isSystemField</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>isSystemField</name></method><methodDesc>(Ljava/lang/String;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>processSetAll</name></method><methodDesc>()V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>processSetAll</name></method><methodDesc>()V</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>processSetAll</name></method><methodDesc>()V</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>reportAmbiguity</name></method><methodDesc>(Lorg/antlr/v4/runtime/Parser;Lorg/antlr/v4/runtime/dfa/DFA;IIZLjava/util/BitSet;Lorg/antlr/v4/runtime/atn/ATNConfigSet;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="78" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/UserAgent$AgentField;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>set</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>setForced</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestSerialization.nl.basjes.parse.useragent.TestSerialization</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>setForced</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>setForced</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="12" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>setForced</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>setForced</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;J)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>setUserAgentString</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="87" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>syntaxError</name></method><methodDesc>(Lorg/antlr/v4/runtime/Recognizer;Ljava/lang/Object;IILjava/lang/String;Lorg/antlr/v4/runtime/RecognitionException;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="60" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toJson</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toJson</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toJson</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toJson</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>54</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toJson</name></method><methodDesc>(Ljava/util/List;)Ljava/lang/String;</methodDesc></location><indexes><int>122</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>153</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>197</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>187</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>67</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>144</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>176</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>188</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent</name></clazz><method><name>toYamlTestCase</name></method><methodDesc>(Z)Ljava/lang/String;</methodDesc></location><indexes><int>238</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;)I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="92" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$BasePathContext;)I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)I</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)I</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)I</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)I</methodDesc></location><indexes><int>65</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="92" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="71" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)I</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="69" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)I</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)I</methodDesc></location><indexes><int>74</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherContext;)I</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;)I</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;)I</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;)I</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="75" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherRequireContext;)I</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)I</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)I</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)I</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)I</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)I</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)I</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="83" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)I</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="81" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)I</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)I</methodDesc></location><indexes><int>73</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)I</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)I</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="91" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)I</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="87" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)I</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext;)I</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext;)I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="7" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lorg/antlr/v4/runtime/ParserRuleContext;)I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lorg/antlr/v4/runtime/ParserRuleContext;)I</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lorg/antlr/v4/runtime/ParserRuleContext;)I</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="87" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lorg/antlr/v4/runtime/ParserRuleContext;)I</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="79" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>calculateInformPath</name></method><methodDesc>(Ljava/lang/String;Lorg/antlr/v4/runtime/ParserRuleContext;)I</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>cannotBeValid</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>cannotBeValid</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>cannotBeValid</name></method><methodDesc>()Z</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>getEvaluatorForUnitTesting</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/treewalker/TreeExpressionEvaluator;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>getMatchExpression</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>getMatches</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/MatchesList;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="92" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>110</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>139</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="11" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>162</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="92" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="94" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>60</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorExpect(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>init</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>115</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>isValidIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>isValidIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>isValidIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>isValidIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>mustHaveMatches</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>processInformedMatches</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>processInformedMatches</name></method><methodDesc>()V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>processInformedMatches</name></method><methodDesc>()V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>setVerbose</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction</name></clazz><method><name>setVerbose</name></method><methodDesc>(ZZ)V</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="94" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>add</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/treewalker/steps/Step;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherCleanVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherCleanVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherCleanVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherCleanVersionContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsingCleanVersion(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherNormalizeBrand</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherNormalizeBrand</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherNormalizeBrand</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherNormalizeBrandContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPathIsNull</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathIsNullContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>75</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitMatcherWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherWordRangeContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitNext</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathContext;)V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitPathFixedValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitPathFixedValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitPathWalk</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitPathWalk</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathWalkContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepBackToFull</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepBackToFull</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepBackToFull</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepBackToFullContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepContainsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepContainsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepContainsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepContainsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepDown</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepDown</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepDown</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepDownContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEndsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEndsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEndsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEndsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNext</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNext</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNext</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNext</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNextContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNotEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNotEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNotEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepNotEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepPrev</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepPrev</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepPrev</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepPrev</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepPrevContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepStartsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepStartsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepStartsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepStartsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepUp</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepUp</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepUp</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepUp</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepUpContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList$WalkListBuilder</name></clazz><method><name>visitStepWordRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepWordRangeContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterCommentEntry</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentEntryContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterCommentProduct</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$CommentProductContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterKeyName</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyNameContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterKeyValueProductVersionName</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueProductVersionNameContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningProduct(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterKeyValueVersionName</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$KeyValueVersionNameContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterMultipleWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$MultipleWordsContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProduct</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningProduct(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductNameNoVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameNoVersionContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductNameVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameVersionContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductNameWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameWordsContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningProduct(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductVersion</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringVersionTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductVersion</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningProduct(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductVersion</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>31</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningProduct(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductVersionWithCommas</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWithCommasContext;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="5" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningKeyValue(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterProductVersionWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductVersionWordsContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningParsingErrorCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterRootText</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$RootTextContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterSingleVersion</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningProduct(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterSingleVersionWithCommas</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$SingleVersionWithCommasContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="13" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>enterVersionWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$VersionWordsContext;)V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>92</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="10" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>inform</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;Ljava/lang/String;Z)Ljava/lang/String;</methodDesc></location><indexes><int>88</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubVersions</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;Z)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;ZLnl/basjes/parse/useragent/utils/Splitter;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;ZLnl/basjes/parse/useragent/utils/Splitter;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;ZLnl/basjes/parse/useragent/utils/Splitter;)V</methodDesc></location><indexes><int>43</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;ZLnl/basjes/parse/useragent/utils/Splitter;)V</methodDesc></location><indexes><int>59</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;ZLnl/basjes/parse/useragent/utils/Splitter;)V</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>informSubstrings</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/lang/String;ZLnl/basjes/parse/useragent/utils/Splitter;)V</methodDesc></location><indexes><int>120</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runEdgecasesTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parse</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parse</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>12</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>52</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseIntoCleanUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>82</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>61</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>45</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="86" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener</name></clazz><method><name>parseUserAgent</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)Lnl/basjes/parse/useragent/parser/UserAgentParser$UserAgentContext;</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>542</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>87</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>148</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>170</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>206</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>223</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkInvalidExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>269</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorExpect(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>273</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>326</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="87" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>341</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkNoExtract(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>353</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorExpect(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>371</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorExpect(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>380</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>385</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>419</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorRequire(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>433</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="85" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>480</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>522</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>535</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>553</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="84" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>466</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>475</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/Analyzer;Ljava/util/Map;Ljava/util/List;Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)V</methodDesc></location><indexes><int>530</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>100</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>128</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>143</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>152</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>analyze</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;)V</methodDesc></location><indexes><int>167</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getAllPossibleFieldNames</name></method><methodDesc>()Ljava/util/Set;</methodDesc></location><indexes><int>34</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getAllPossibleFieldNames</name></method><methodDesc>(Ljava/util/List;)Ljava/util/Set;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testAskingForImpossibleField(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getAllPossibleFieldNames</name></method><methodDesc>(Ljava/util/List;)Ljava/util/Set;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getAllPossibleFieldNames</name></method><methodDesc>(Ljava/util/List;)Ljava/util/Set;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>49</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>58</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>64</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestDeveloperTools.validateStringOutputsAndMatches(nl.basjes.parse.useragent.TestDeveloperTools)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getUsedMatches</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>80</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>getVerbose</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>gotMyFirstStartingPoint</name></method><methodDesc>()V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>informMeAbout</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/MatcherAction;Ljava/lang/String;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>lookingForRange</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;)V</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>setVerboseTemporarily</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/Matcher</name></clazz><method><name>setVerboseTemporarily</name></method><methodDesc>(Z)V</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>addGeneratedFields</name></method><methodDesc>(Ljava/lang/String;[Ljava/lang/String;)V</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="67" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>172</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>21</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous.testAnnotationBasedParser(nl.basjes.parse.useragent.annotate.TestAnnotationSystemAnonymous)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="30" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 53 -&gt; Only field: &quot;WebviewAppNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>66</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="43" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 16 -&gt; Only field: &quot;LayoutEngineNameVersion&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>81</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="46" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 17 -&gt; Only field: &quot;LayoutEngineNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>107</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>118</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="6" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>129</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="42" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 15 -&gt; Only field: &quot;LayoutEngineVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>140</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="30" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestPredefinedBrowsersPerField.validateAllPredefinedBrowsersForField[Test 53 -&gt; Only field: &quot;WebviewAppNameVersionMajor&quot;](nl.basjes.parse.useragent.TestPredefinedBrowsersPerField)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>154</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>build</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer;</methodDesc></location><indexes><int>166</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>hideMatcherLoadStats</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testAskingForImpossibleField(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>preheat</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>showMatcherLoadStats</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withAllFields</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withCache</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testLimitedFields(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withCache</name></method><methodDesc>(I)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withField</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withField</name></method><methodDesc>(Ljava/lang/String;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testAskingForImpossibleField(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withFields</name></method><methodDesc>(Ljava/util/Collection;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withFields</name></method><methodDesc>(Ljava/util/Collection;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>19</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withFields</name></method><methodDesc>(Ljava/util/Collection;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withFields</name></method><methodDesc>(Ljava/util/Collection;)Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withoutCache</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBuilder.testAskingForImpossibleField(nl.basjes.parse.useragent.analyze.TestBuilder)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$Builder</name></clazz><method><name>withoutCache</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgentAnalyzer$Builder;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="61" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>56</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(I)V</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="8" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)Z</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)Z</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>add</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)Z</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>add</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/MatchesList$Match;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>add</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/MatchesList$Match;)Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>add</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/MatchesList$Match;)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>add</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/MatchesList$Match;)Z</methodDesc></location><indexes><int>29</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>add</name></method><methodDesc>(Lnl/basjes/parse/useragent/analyze/MatchesList$Match;)Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>increaseCapacity</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>increaseCapacity</name></method><methodDesc>()V</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>increaseCapacity</name></method><methodDesc>()V</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>increaseCapacity</name></method><methodDesc>()V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>increaseCapacity</name></method><methodDesc>()V</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>isEmpty</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>isEmpty</name></method><methodDesc>()Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>iterator</name></method><methodDesc>()Ljava/util/Iterator;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>size</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>toArray</name></method><methodDesc>()[Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>toStrings</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList</name></clazz><method><name>toStrings</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>207</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>231</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>276</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="9" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testInaccessibleSetter(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testInaccessibleSetter(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testInaccessibleSetter(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testInaccessibleSetter(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>89</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testInaccessibleSetter(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>93</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testInaccessibleSetter(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>98</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testInaccessibleSetter(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>103</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testInaccessibleSetter(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>109</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>138</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>207</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>284</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>307</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>initialize</name></method><methodDesc>(Lnl/basjes/parse/useragent/annonate/UserAgentAnnotationMapper;)V</methodDesc></location><indexes><int>191</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>lambda$initialize$0</name></method><methodDesc>(Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>map</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>map</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>map</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>map</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>68</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>map</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/annonate/UserAgentAnnotationAnalyzer</name></clazz><method><name>map</name></method><methodDesc>(Ljava/lang/Object;)Ljava/lang/Object;</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/util/Map;Z)V</methodDesc></location><indexes><int>48</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/util/Map;Z)V</methodDesc></location><indexes><int>77</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/util/Map;Z)V</methodDesc></location><indexes><int>40</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;Ljava/util/Map;Z)V</methodDesc></location><indexes><int>86</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="SURVIVED"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>getFirstStep</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/treewalker/steps/Step;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>getFirstStep</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/treewalker/steps/Step;</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>getFirstStep</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/treewalker/steps/Step;</methodDesc></location><indexes><int>23</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>linkSteps</name></method><methodDesc>()V</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>22</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="8" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>37</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>usesIsNull</name></method><methodDesc>()Z</methodDesc></location><indexes><int>55</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>50</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/WalkList</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>70</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;JLjava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>35</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.TestErrorHandling.checkSyntaxErrorExpect(nl.basjes.parse.useragent.TestErrorHandling)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>getAttribute</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.annotate.TestAnnotationSystem.testImpossibleField(nl.basjes.parse.useragent.annotate.TestAnnotationSystem)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>isFixedValue</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>isFixedValue</name></method><methodDesc>()Z</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>57</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>62</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>105</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>117</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runWalkingTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>47</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>parseWalkerExpression</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser;)Lorg/antlr/v4/runtime/ParserRuleContext;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="4" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherNestedFunctionsTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherExtractAction</name></clazz><method><name>setFixedValue</name></method><methodDesc>(Ljava/lang/String;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>unQuoteToken</name></method><methodDesc>(Lorg/antlr/v4/runtime/Token;)V</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>unQuoteToken</name></method><methodDesc>(Lorg/antlr/v4/runtime/Token;)V</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>unQuoteToken</name></method><methodDesc>(Lorg/antlr/v4/runtime/Token;)V</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>unQuoteToken</name></method><methodDesc>(Lorg/antlr/v4/runtime/Token;)V</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>unQuoteToken</name></method><methodDesc>(Lorg/antlr/v4/runtime/Token;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitMatcherPathLookup</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$MatcherPathLookupContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitPathFixedValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitPathFixedValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$PathFixedValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepContainsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepContainsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepContainsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepEndsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepEndsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEndsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runLookupTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepNotEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runDebugOutputTest(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepNotEqualsValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepNotEqualsValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepStartsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherAction$UnQuoteValues</name></clazz><method><name>visitStepStartsWithValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$StepStartsWithValueContext;)Ljava/lang/Void;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent;Ljava/lang/String;)V</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>getConfidence</name></method><methodDesc>()J</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>getConfidence</name></method><methodDesc>()J</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>getConfidence</name></method><methodDesc>()J</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValue</name></method><methodDesc>(Ljava/lang/String;J)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValue</name></method><methodDesc>(Ljava/lang/String;J)Z</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValue</name></method><methodDesc>(Ljava/lang/String;J)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.classify.TestClassifier.testEnumCreation(nl.basjes.parse.useragent.classify.TestClassifier)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValue</name></method><methodDesc>(Ljava/lang/String;J)Z</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValue</name></method><methodDesc>(Ljava/lang/String;J)Z</methodDesc></location><indexes><int>41</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/UserAgent$AgentField;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgent$AgentField</name></clazz><method><name>setValueForced</name></method><methodDesc>(Ljava/lang/String;J)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getList</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Lnl/basjes/parse/useragent/analyze/NumberRangeList;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>42</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runAllPossibleSteps(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>getMaxRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeContext;)Ljava/lang/Integer;</methodDesc></location><indexes><int>51</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>visitNumberRangeAll</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeAllContext;)Lnl/basjes/parse/useragent/analyze/NumberRangeList;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathParsing(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>visitNumberRangeEmpty</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeEmptyContext;)Lnl/basjes/parse/useragent/analyze/NumberRangeList;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>visitNumberRangeSingleValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeSingleValueContext;)Lnl/basjes/parse/useragent/analyze/NumberRangeList;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/NumberRangeVisitor</name></clazz><method><name>visitNumberRangeStartToEnd</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$NumberRangeStartToEndContext;)Lnl/basjes/parse/useragent/analyze/NumberRangeList;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>79</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>101</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>123</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>30</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>39</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>72</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>94</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>116</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="8" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>44</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/UserAgentTreeFlattener$State</name></clazz><method><name>calculatePath</name></method><methodDesc>(Lnl/basjes/parse/useragent/parse/UserAgentTreeFlattener$PathType;Z)Ljava/lang/String;</methodDesc></location><indexes><int>159</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>33</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>38</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>equals</name></method><methodDesc>(Ljava/lang/Object;)Z</methodDesc></location><indexes><int>46</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>getFirst</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>getLast</name></method><methodDesc>()I</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor$Range</name></clazz><method><name>hashCode</name></method><methodDesc>()I</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/AntlrUtils</name></clazz><method><name>getSourceText</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/AntlrUtils</name></clazz><method><name>getSourceText</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/AntlrUtils</name></clazz><method><name>getSourceText</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/AntlrUtils</name></clazz><method><name>getSourceText</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/AntlrUtils</name></clazz><method><name>getSourceText</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/AntlrUtils</name></clazz><method><name>getSourceText</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/lang/String;</methodDesc></location><indexes><int>36</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testFlatteningComment(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/AntlrUtils</name></clazz><method><name>getSourceText</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Ljava/lang/String;</methodDesc></location><indexes><int>53</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Lnl/basjes/parse/useragent/analyze/Matcher;)V</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>inform</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;)V</methodDesc></location><indexes><int>10</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>obtainResult</name></method><methodDesc>()Z</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>parseWalkerExpression</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser;)Lorg/antlr/v4/runtime/ParserRuleContext;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathSimpleName(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatcherRequireAction</name></clazz><method><name>reset</name></method><methodDesc>()V</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="3" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/WordSplitter</name></clazz><method><name>getInstance</name></method><methodDesc>()Lnl/basjes/parse/useragent/utils/WordSplitter;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/WordSplitter</name></clazz><method><name>getInstance</name></method><methodDesc>()Lnl/basjes/parse/useragent/utils/WordSplitter;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/WordSplitter</name></clazz><method><name>isEndOfStringSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/WordSplitter</name></clazz><method><name>isEndOfStringSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/WordSplitter</name></clazz><method><name>isEndOfStringSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>18</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/WordSplitter</name></clazz><method><name>isSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>9</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/WordSplitter</name></clazz><method><name>isSeparator</name></method><methodDesc>(C)Z</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.wordSplitter(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getExactlyOneNodeTuple</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/MappingNode;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/NodeTuple;</methodDesc></location><indexes><int>17</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getKeyAsString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getStringValues</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getStringValues</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/Node;Ljava/lang/String;)Ljava/util/List;</methodDesc></location><indexes><int>69</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsMappingNode</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Lorg/yaml/snakeyaml/nodes/MappingNode;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/YamlUtils</name></clazz><method><name>getValueAsString</name></method><methodDesc>(Lorg/yaml/snakeyaml/nodes/NodeTuple;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getFirstSplits</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>28</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getInstance</name></method><methodDesc>()Lnl/basjes/parse/useragent/utils/VersionSplitter;</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestWordSplitter.versionSplitterEMail(nl.basjes.parse.useragent.analyze.TestWordSplitter)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/VersionSplitter</name></clazz><method><name>getSingleSplit</name></method><methodDesc>(Ljava/lang/String;I)Ljava/lang/String;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList$1</name></clazz><method><name>hasNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList$1</name></clazz><method><name>hasNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList$1</name></clazz><method><name>hasNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>16</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestBasics.testCacheSetter(nl.basjes.parse.useragent.analyze.TestBasics)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList$1</name></clazz><method><name>next</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/MatchesList$Match;</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="2" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runMatcherIsNullTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList$1</name></clazz><method><name>next</name></method><methodDesc>()Lnl/basjes/parse/useragent/analyze/MatchesList$Match;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runPositionalTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor</name></clazz><method><name>getRange</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeContext;)Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;</methodDesc></location><indexes><int>7</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor</name></clazz><method><name>visitWordRangeFirstWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeFirstWordsContext;)Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor</name></clazz><method><name>visitWordRangeLastWords</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeLastWordsContext;)Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestMatcherExpressions.runSubstringTests(nl.basjes.parse.useragent.analyze.TestMatcherExpressions)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor</name></clazz><method><name>visitWordRangeSingleWord</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeSingleWordContext;)Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;</methodDesc></location><indexes><int>15</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkAroundTheWorld(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/WordRangeVisitor</name></clazz><method><name>visitWordRangeStartToEnd</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentTreeWalkerParser$WordRangeStartToEndContext;)Lnl/basjes/parse/useragent/analyze/WordRangeVisitor$Range;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.analyze.TestTreewalkerParsing.validateWalkPathNameSubstring(nl.basjes.parse.useragent.analyze.TestTreewalkerParsing)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>findSplitStart</name></method><methodDesc>([CI)I</methodDesc></location><indexes><int>4</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>14</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Splitter</name></clazz><method><name>getSplitRange</name></method><methodDesc>(Ljava/lang/String;II)Ljava/lang/String;</methodDesc></location><indexes><int>95</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>setNextStep</name></method><methodDesc>(ILnl/basjes/parse/useragent/analyze/treewalker/steps/Step;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>setNextStep</name></method><methodDesc>(ILnl/basjes/parse/useragent/analyze/treewalker/steps/Step;)V</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>setNextStep</name></method><methodDesc>(ILnl/basjes/parse/useragent/analyze/treewalker/steps/Step;)V</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/Step</name></clazz><method><name>up</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>8</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>32</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>99</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>fixIt</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>113</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/parse/EvilManualUseragentStringHacks</name></clazz><method><name>replaceString</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>25</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList$Match</name></clazz><method><name>&lt;init&gt;</name></method><methodDesc>(Ljava/lang/String;Ljava/lang/String;Lorg/antlr/v4/runtime/tree/ParseTree;)V</methodDesc></location><indexes><int>11</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList$Match</name></clazz><method><name>getKey</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList$Match</name></clazz><method><name>getResult</name></method><methodDesc>()Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/MatchesList$Match</name></clazz><method><name>getValue</name></method><methodDesc>()Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>6</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>196</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/utils/Normalize</name></clazz><method><name>brand</name></method><methodDesc>(Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>222</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>26</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>13</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepWordRange</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>27</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>lambda$new$3</name></method><methodDesc>(Lorg/antlr/v4/runtime/ParserRuleContext;)Z</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/UserAgentGetChildrenVisitor</name></clazz><method><name>visitProductNameKeyValue</name></method><methodDesc>(Lnl/basjes/parse/useragent/parser/UserAgentParser$ProductNameKeyValueContext;)Ljava/util/Iterator;</methodDesc></location><indexes><int>71</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$GetAllPathsAnalyzer</name></clazz><method><name>getResult</name></method><methodDesc>()Lnl/basjes/parse/useragent/UserAgent;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/UserAgentAnalyzer$GetAllPathsAnalyzer</name></clazz><method><name>getValues</name></method><methodDesc>()Ljava/util/List;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="1" status="KILLED"><killingTest class="org.pitest.functional.Option$Some"><value class="string">nl.basjes.parse.useragent.parse.TestUserAgentFlattening.testRootCases(nl.basjes.parse.useragent.parse.TestUserAgentFlattening)</value></killingTest></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/value/StepFixedString</name></clazz><method><name>walk</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;Ljava/lang/String;)Ljava/lang/String;</methodDesc></location><indexes><int>5</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="NO_COVERAGE"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/stepdown/ChildIterable$ChildIterator</name></clazz><method><name>findNext</name></method><methodDesc>()Z</methodDesc></location><indexes><int>96</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepPrev</name></clazz><method><name>prev</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>24</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
<result><id><location><clazz><name>nl/basjes/parse/useragent/analyze/treewalker/steps/walk/StepNext</name></clazz><method><name>next</name></method><methodDesc>(Lorg/antlr/v4/runtime/tree/ParseTree;)Lorg/antlr/v4/runtime/tree/ParseTree;</methodDesc></location><indexes><int>20</int></indexes><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator></id><status numberOfTestsRun="0" status="TIMED_OUT"><killingTest class="org.pitest.functional.Option$None"/></status></result>
